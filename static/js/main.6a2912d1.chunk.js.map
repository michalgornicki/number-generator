{"version":3,"sources":["App.jsx","reportWebVitals.js","index.js"],"names":["App","useState","state","setState","sum","length","reduce","a","b","className","onClick","Math","floor","random","map","item","index","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yNAuDeA,MApDf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACIC,EAAMF,EAAMG,OAAS,EAAIH,EAAMI,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,KAAK,EAE7D,OACE,8BACE,sBAAKC,UAAU,mBAAf,UACE,qBACEA,UAAU,SACVC,QAAS,kBACPP,EAAS,GAAD,mBAAKD,GAAL,CAAYS,KAAKC,MAAsB,EAAhBD,KAAKE,SAAe,OAHvD,iBAQA,qBACEJ,UAAU,SACVC,QAAS,kBAAMP,EAAS,GAAD,mBAAKD,GAAL,CAAYS,KAAKC,MAAsB,GAAhBD,KAAKE,SAAgB,OAFrE,kBAMA,qBACEJ,UAAU,SACVC,QAAS,kBAAMP,EAAS,GAAD,mBAAKD,GAAL,CAAYS,KAAKC,MAAsB,IAAhBD,KAAKE,SAAiB,OAFtE,mBAMA,qBACEJ,UAAU,SACVC,QAAS,kBAAMP,EAAS,GAAD,mBAAKD,GAAL,CAAYS,KAAKC,MAAsB,IAAhBD,KAAKE,SAAkB,OAFvE,oBAMA,qBAAKJ,UAAU,SAASC,QAAS,kBAAMP,EAAS,KAAhD,mBAGA,qBAAKM,UAAU,eAAf,SAA+BL,OAGjC,qBAAKK,UAAU,MAAf,SACGP,EAAMY,KAAI,SAACC,EAAMC,GAChB,OACE,sBAAKP,UAAU,WAAf,UACGM,EADH,IACUE,QAAQC,IAAIF,eClCnBG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6a2912d1.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [state, setState] = useState([]);\n  var sum = state.length > 0 ? state.reduce((a, b) => a + b) : 0;\n\n  return (\n    <p>\n      <div className=\"button-container\">\n        <div\n          className=\"button\"\n          onClick={() =>\n            setState([...state, Math.floor(Math.random() * 2 + 1)])\n          }\n        >\n          1-2\n        </div>\n        <div\n          className=\"button\"\n          onClick={() => setState([...state, Math.floor(Math.random() * 10 + 1)])}\n        >\n          1-10\n        </div>\n        <div\n          className=\"button\"\n          onClick={() => setState([...state, Math.floor(Math.random() * 100 + 1)])}\n        >\n          1-100\n        </div>\n        <div\n          className=\"button\"\n          onClick={() => setState([...state, Math.floor(Math.random() * 1000 + 1)])}\n        >\n          1-1000\n        </div>\n        <div className=\"button\" onClick={() => setState([])}>\n          clear\n        </div>\n        <div className=\"button green\">{sum}</div>\n      </div>\n\n      <div className=\"map\">\n        {state.map((item, index) => {\n          return (\n            <div className=\"map-item\">\n              {item} {console.log(index)}\n            </div>\n          );\n        })}\n      </div>\n    </p>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}